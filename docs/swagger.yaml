openapi: 3.0.3
info:
  title: Agroforestree-Sympla Integration API
  description: |
    Middleware para integra√ß√£o entre plataforma Sympla e API Agroforestree.
    
    Este servi√ßo processa webhooks da Sympla e automaticamente cria doa√ß√µes 
    na plataforma Agroforestree quando pedidos s√£o aprovados.
    
    ## Recursos Principais
    - Recebimento seguro de webhooks da Sympla
    - Valida√ß√£o de assinaturas HMAC
    - Integra√ß√£o com API Agroforestree
    - Dashboard de monitoramento de doa√ß√µes
    
    ## Seguran√ßa
    - Valida√ß√£o de assinaturas HMAC SHA-256
    - Tokens JWT para autentica√ß√£o
    - Preven√ß√£o de ataques de replay
    
  version: 1.0.0
  contact:
    name: Equipe Agroforestree
    email: tech@agroforestree.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://agroforestree-sympla-middleware.onrender.com
    description: Servidor de produ√ß√£o (Render)
  - url: http://localhost:3001
    description: Servidor de desenvolvimento

paths:
  /webhooks/sympla:
    post:
      summary: Webhook da Sympla
      description: |
        Endpoint para receber webhooks da plataforma Sympla.
        
        ## Processo
        1. Valida assinatura HMAC do webhook
        2. Processa apenas eventos `order.approved`
        3. Cria doa√ß√£o automaticamente na API Agroforestree
        4. Armazena registro da tentativa de doa√ß√£o
        
        ## Seguran√ßa
        - Requer header `X-Sympla-Signature` com assinatura HMAC SHA-256
        - Valida√ß√£o de timestamp para prevenir replay attacks
        
      tags:
        - Webhooks
      security:
        - SymplaSignature: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymplaWebhookPayload'
            examples:
              order_approved:
                summary: Pedido Aprovado
                value:
                  event: "order.approved"
                  timestamp: "2024-01-01T10:00:00Z"
                  data:
                    order_identifier: "SPL-12345"
                    event_id: "EVT-98765"
                    event_name: "Workshop de Sustentabilidade"
                    total_order_amount: 120.00
                    buyer_first_name: "Jo√£o"
                    buyer_last_name: "Silva"
                    buyer_email: "joao.silva@example.com"
                    order_status: "approved"
      responses:
        '200':
          description: Webhook processado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookResponse'
              example:
                status: "success"
                message: "Webhook processado com sucesso"
                timestamp: "2024-01-01T10:00:00Z"
        '401':
          description: Assinatura inv√°lida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Invalid signature"
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Internal server error"

  /health:
    get:
      summary: Health Check
      description: Verifica se o servi√ßo est√° funcionando corretamente
      tags:
        - Monitoramento
      responses:
        '200':
          description: Servi√ßo funcionando
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "üå± Middleware Agroforestree ativo"
                timestamp: "2024-01-01T10:00:00Z"
                environment: "development"

  /api/donations:
    get:
      summary: Listar Doa√ß√µes
      description: |
        Retorna lista de todas as tentativas de doa√ß√£o processadas.
        
        ## Informa√ß√µes Inclu√≠das
        - Status da doa√ß√£o (PENDING_USER_ACTION, CONSENT_GIVEN, COMPLETED, DECLINED)
        - Identificadores do pedido Sympla
        - Tokens de autentica√ß√£o
        - Timestamps de cria√ß√£o e atualiza√ß√£o
        
      tags:
        - Doa√ß√µes
      security:
        - ApiKeyAuth: []
      responses:
        '200':
          description: Lista de doa√ß√µes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DonationsResponse'
              example:
                donations:
                  - id: "uuid-123"
                    sympla_order_id: "SPL-12345"
                    sympla_event_id: "EVT-98765"
                    status: "COMPLETED"
                    donation_token: "eyJhbGciOiJIUzI1NiIs..."
                    created_at: "2024-01-01T10:00:00Z"
                    updated_at: "2024-01-01T10:01:00Z"
                total: 1
                timestamp: "2024-01-01T10:00:00Z"

  /donation/initiate:
    get:
      summary: P√°gina de Consentimento para Doa√ß√£o
      description: |
        P√°gina que o usu√°rio acessa ap√≥s comprar ingresso (via link/QR Code).
        
        ## Fluxo LGPD-Compliant:
        1. Usu√°rio compra ingresso na Sympla
        2. Recebe link/QR Code com donation_token
        3. Acessa esta p√°gina para dar consentimento expl√≠cito
        4. Escolhe se quer plantar uma √°rvore ou n√£o
        
        ## Interface:
        - Informa√ß√µes do evento e impacto ambiental
        - Checkbox de consentimento expl√≠cito (LGPD)
        - Bot√µes "Sim, plantar minha √°rvore" / "N√£o, obrigado"
        
      tags:
        - Fluxo do Usu√°rio
      parameters:
        - name: token
          in: query
          required: true
          description: Token JWT da tentativa de doa√ß√£o
          schema:
            type: string
            example: "eyJhbGciOiJIUzI1NiIs..."
      responses:
        '200':
          description: P√°gina de consentimento renderizada
          content:
            text/html:
              schema:
                type: string
              example: |
                <!DOCTYPE html>
                <html>
                  <head><title>Plante uma √Årvore - Agroforestree</title></head>
                  <body>
                    <h1>üå± Obrigado por apoiar eventos sustent√°veis!</h1>
                    <p>Seu ingresso para <strong>Workshop Sustentabilidade</strong> foi confirmado.</p>
                    <form action="/donation/execute" method="POST">
                      <input type="hidden" name="token" value="...">
                      <label>
                        <input type="checkbox" name="consent" required>
                        Autorizo o plantio de uma √°rvore em meu nome (LGPD)
                      </label>
                      <button type="submit">üå≥ Sim, plantar minha √°rvore!</button>
                    </form>
                  </body>
                </html>
        '400':
          description: Token inv√°lido ou expirado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Token inv√°lido ou expirado"

  /donation/execute:
    post:
      summary: Executar Doa√ß√£o com Consentimento
      description: |
        Processa o consentimento do usu√°rio e executa a doa√ß√£o na Agroforestree.
        
        ## Processo:
        1. Valida o token JWT da tentativa
        2. Verifica consentimento expl√≠cito
        3. Chama API Agroforestree para criar doa√ß√£o
        4. Redireciona para p√°gina de confirma√ß√£o com certificado
        
        ## Conformidade LGPD:
        - Consentimento expl√≠cito e informado
        - Finalidade espec√≠fica (plantio de √°rvore)
        - Possibilidade de recusa sem preju√≠zo
        
      tags:
        - Fluxo do Usu√°rio
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - token
                - consent
              properties:
                token:
                  type: string
                  description: Token JWT da tentativa de doa√ß√£o
                  example: "eyJhbGciOiJIUzI1NiIs..."
                consent:
                  type: string
                  enum: ['on']
                  description: Checkbox de consentimento (deve ser 'on')
      responses:
        '302':
          description: Redirecionamento para p√°gina de confirma√ß√£o
          headers:
            Location:
              schema:
                type: string
                example: "/donation/success?donationId=AGF-1234567890"
        '400':
          description: Dados inv√°lidos ou consentimento n√£o dado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "Consentimento obrigat√≥rio para prosseguir"

  /donation/success:
    get:
      summary: P√°gina de Sucesso da Doa√ß√£o
      description: |
        P√°gina de confirma√ß√£o ap√≥s doa√ß√£o bem-sucedida.
        
        ## Conte√∫do:
        - Confirma√ß√£o da doa√ß√£o realizada
        - Link para certificado PDF
        - Informa√ß√µes sobre impacto ambiental
        - Compartilhamento social
        
      tags:
        - Fluxo do Usu√°rio
      parameters:
        - name: donationId
          in: query
          required: true
          description: ID da doa√ß√£o criada na Agroforestree
          schema:
            type: string
            example: "AGF-1234567890"
      responses:
        '200':
          description: P√°gina de confirma√ß√£o renderizada
          content:
            text/html:
              schema:
                type: string

  /events/{eventId}/impact-summary:
    get:
      summary: Resumo de Impacto por Evento
      description: |
        Dashboard executivo para organizadores de evento.
        
        ## M√©tricas Inclu√≠das:
        - Total de doa√ß√µes/√°rvores plantadas
        - Taxa de engajamento (% de compradores que doaram)
        - Impacto de CO‚ÇÇ compensado
        - Agricultores familiares beneficiados
        
        ## Caso de Uso:
        - Relat√≥rios p√≥s-evento para organizadores
        - M√©tricas ESG para relat√≥rios corporativos
        - Dados para marketing de pr√≥ximos eventos
        
      tags:
        - Dashboard Organizador
      security:
        - ApiKeyAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          description: ID do evento na Sympla
          schema:
            type: string
            example: "EVT-98765"
      responses:
        '200':
          description: M√©tricas de impacto do evento
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventImpactSummary'
              example:
                eventId: "EVT-98765"
                eventName: "Workshop de Sustentabilidade"
                summary:
                  totalTickets: 600
                  totalDonations: 152
                  engagementRate: "25.3%"
                  treesPlanted: 152
                  co2Compensated: "25.08 toneladas"
                  farmersSupported: 152
                  totalDonationValue: "R$ 760,00"
                period:
                  startDate: "2024-01-01T00:00:00Z"
                  endDate: "2024-01-01T23:59:59Z"
        '401':
          description: Chave de API inv√°lida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Evento n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /events/{eventId}/qrcode:
    get:
      summary: Gerar QR Code para Evento
      description: |
        Gera QR Code personalizado para o evento, apontando para p√°gina de doa√ß√£o.
        
        ## Funcionalidades:
        - QR Code din√¢mico com logo da Agroforestree
        - Link direto para /donation/initiate
        - Personaliz√°vel com cores do evento
        - Diferentes tamanhos (query parameter)
        
        ## Uso:
        - Tel√µes durante o evento
        - Material gr√°fico de divulga√ß√£o
        - Redes sociais do organizador
        - Email marketing p√≥s-evento
        
      tags:
        - Dashboard Organizador
      security:
        - ApiKeyAuth: []
      parameters:
        - name: eventId
          in: path
          required: true
          description: ID do evento na Sympla
          schema:
            type: string
            example: "EVT-98765"
        - name: size
          in: query
          required: false
          description: Tamanho do QR Code em pixels
          schema:
            type: integer
            enum: [200, 400, 800]
            default: 400
        - name: format
          in: query
          required: false
          description: Formato da imagem
          schema:
            type: string
            enum: ['png', 'svg']
            default: 'png'
      responses:
        '200':
          description: Imagem do QR Code gerada
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/svg+xml:
              schema:
                type: string
        '401':
          description: Chave de API inv√°lida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Evento n√£o encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /simulate/sympla-webhook:
    post:
      summary: Simula envio de webhook da Sympla para testes
      description: |
        Endpoint auxiliar para simular localmente o envio de um webhook da Sympla, 
        gerando assinatura HMAC v√°lida e testando o fluxo de doa√ß√£o.

        Esta rota envia um `order.approved` artificial para o endpoint oficial `/webhooks/sympla`.
      tags:
        - Webhooks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventType:
                  type: string
                  enum: ['order.approved', 'order.cancelled', 'order.refunded']
                  default: 'order.approved'
                  description: Tipo de evento a ser simulado
                order_identifier:
                  type: string
                  example: XYZ123
                event_id:
                  type: string
                  example: EVT456
                event_name:
                  type: string
                  example: Festival Sustent√°vel 2025
                buyer_first_name:
                  type: string
                  example: Jo√£o
                buyer_last_name:
                  type: string
                  example: Silva
                buyer_email:
                  type: string
                  format: email
                  example: joao@email.com
                total_order_amount:
                  type: number
                  example: 50.0
      responses:
        '200':
          description: Webhook simulado enviado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ‚úÖ Simula√ß√£o enviada
                  webhookResponse:
                    type: object
        '500':
          description: Erro ao simular webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    SymplaSignature:
      type: apiKey
      in: header
      name: X-Sympla-Signature
      description: |
        Assinatura HMAC SHA-256 do corpo da requisi√ß√£o.
        
        Formato: `sha256={hash}`
        
        O hash √© calculado usando HMAC SHA-256 com a chave secreta configurada
        no webhook da Sympla.

    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: |
        Chave de API para acesso √†s rotas de gest√£o e dashboard.
        
        Esta chave protege endpoints sens√≠veis como:
        - Listagem de doa√ß√µes
        - M√©tricas de eventos
        - Gera√ß√£o de QR Codes
        
        Obtenha sua chave no painel administrativo da Agroforestree.

  schemas:
    SymplaWebhookPayload:
      type: object
      required:
        - event
        - data
      properties:
        event:
          type: string
          enum: ['order.approved', 'order.created', 'order.cancelled', 'order.refunded']
          description: Tipo do evento
        data:
          $ref: '#/components/schemas/SymplaOrderData'
        timestamp:
          type: string
          format: date-time
          description: Timestamp do evento

    SymplaOrderData:
      type: object
      required:
        - order_identifier
        - event_id
        - event_name
        - total_order_amount
        - buyer_first_name
        - buyer_last_name
        - buyer_email
        - order_status
      properties:
        order_identifier:
          type: string
          description: Identificador √∫nico do pedido
          example: "SPL-12345"
        event_id:
          type: string
          description: Identificador do evento
          example: "EVT-98765"
        event_name:
          type: string
          description: Nome do evento
          example: "Workshop de Sustentabilidade"
        total_order_amount:
          type: number
          format: float
          description: Valor total do pedido
          example: 120.00
        buyer_first_name:
          type: string
          description: Nome do comprador
          example: "Jo√£o"
        buyer_last_name:
          type: string
          description: Sobrenome do comprador
          example: "Silva"
        buyer_email:
          type: string
          format: email
          description: Email do comprador
          example: "joao.silva@example.com"
        order_status:
          type: string
          enum: ['approved', 'pending', 'declined']
          description: Status do pedido
        participants_full_name_comma_separated:
          type: string
          description: Nomes dos participantes separados por v√≠rgula
          example: "Jo√£o Silva, Maria Santos"
        participants_email_comma_separated:
          type: string
          description: Emails dos participantes separados por v√≠rgula
          example: "joao@example.com, maria@example.com"

    DonationAttempt:
      type: object
      properties:
        id:
          type: string
          description: ID √∫nico da tentativa
          example: "uuid-123"
        sympla_order_id:
          type: string
          description: ID do pedido Sympla
          example: "SPL-12345"
        sympla_event_id:
          type: string
          description: ID do evento Sympla
          example: "EVT-98765"
        status:
          type: string
          enum: ['PENDING_USER_ACTION', 'CONSENT_GIVEN', 'COMPLETED', 'DECLINED']
          description: Status da doa√ß√£o
        donation_token:
          type: string
          description: Token JWT para a doa√ß√£o
          example: "eyJhbGciOiJIUzI1NiIs..."
        created_at:
          type: string
          format: date-time
          description: Data de cria√ß√£o
        updated_at:
          type: string
          format: date-time
          description: Data de atualiza√ß√£o

    WebhookResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        message:
          type: string
          example: "Webhook processado com sucesso"
        timestamp:
          type: string
          format: date-time

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: "üå± Middleware Agroforestree ativo"
        timestamp:
          type: string
          format: date-time
        environment:
          type: string
          enum: ['development', 'production', 'test']

    DonationsResponse:
      type: object
      properties:
        donations:
          type: array
          items:
            $ref: '#/components/schemas/DonationAttempt'
        total:
          type: integer
          description: Total de doa√ß√µes
        timestamp:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro
          example: "Invalid signature"

    EventImpactSummary:
      type: object
      description: Resumo de impacto ambiental de um evento espec√≠fico
      properties:
        eventId:
          type: string
          description: ID do evento na Sympla
          example: "EVT-98765"
        eventName:
          type: string
          description: Nome do evento
          example: "Workshop de Sustentabilidade"
        summary:
          type: object
          description: M√©tricas consolidadas do evento
          properties:
            totalTickets:
              type: integer
              description: Total de ingressos vendidos
              example: 600
            totalDonations:
              type: integer
              description: Total de doa√ß√µes/√°rvores plantadas
              example: 152
            engagementRate:
              type: string
              description: Taxa de engajamento (% de compradores que doaram)
              example: "25.3%"
            treesPlanted:
              type: integer
              description: N√∫mero de √°rvores plantadas
              example: 152
            co2Compensated:
              type: string
              description: CO‚ÇÇ compensado em toneladas
              example: "25.08 toneladas"
            farmersSupported:
              type: integer
              description: Agricultores familiares beneficiados
              example: 152
            totalDonationValue:
              type: string
              description: Valor total das doa√ß√µes
              example: "R$ 760,00"
        period:
          type: object
          description: Per√≠odo de an√°lise
          properties:
            startDate:
              type: string
              format: date-time
              description: Data de in√≠cio do evento
              example: "2024-01-01T00:00:00Z"
            endDate:
              type: string
              format: date-time
              description: Data de fim do evento
              example: "2024-01-01T23:59:59Z"

    ConsentFormData:
      type: object
      description: Dados do formul√°rio de consentimento LGPD
      required:
        - token
        - consent
      properties:
        token:
          type: string
          description: Token JWT da tentativa de doa√ß√£o
          example: "eyJhbGciOiJIUzI1NiIs..."
        consent:
          type: string
          enum: ['on']
          description: Confirma√ß√£o de consentimento expl√≠cito
        donor_name:
          type: string
          description: Nome do doador (opcional para personaliza√ß√£o)
          example: "Jo√£o Silva"
        message:
          type: string
          description: Mensagem personalizada (opcional)
          maxLength: 200
          example: "Pela sustentabilidade do planeta!"

tags:
  - name: Webhooks
    description: Endpoints para receber webhooks da Sympla
  - name: Doa√ß√µes
    description: Opera√ß√µes relacionadas √†s doa√ß√µes (requer autentica√ß√£o)
  - name: Fluxo do Usu√°rio
    description: P√°ginas e formul√°rios para intera√ß√£o direta com usu√°rios finais
  - name: Dashboard Organizador
    description: Ferramentas e m√©tricas para organizadores de eventos (requer autentica√ß√£o)
  - name: Monitoramento
    description: Endpoints para monitoramento da aplica√ß√£o